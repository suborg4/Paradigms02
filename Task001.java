/**
* Условие
* На вход подается число n.
* Задача
* Написать скрипт в любой парадигме, который выводит на экран таблицу умножения всех чисел от 1 до n.
* Обоснуйте выбор парадигм.
* Пример вывода:
* 1 * 1 = 1
* 1 * 2 = 2
* 1 * 3 = 3
* 1 * 4 = 4
* 1 * 5 = 5
* 1 * 6 = 6
* ..
* 1 * 9 = 9
 */

public class Task001 {
    public static void printMultiplicationTable(int n) {
        if (n <= 0) {
            System.out.println("Пожалуйста, введите положительное число n.");
            return;
        }
        
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= 9; j++) {
                System.out.println(i + " * " + j + " = " + (i * j));
            }
        }
    }

    public static void main(String[] args) {
        int n = 5; // Замените значение n на желаемое
        printMultiplicationTable(n);
    }
}

/**
* Решение в императивном стиле более понятно для большинства разработчиков
* В коде используется функция printMultiplicationTable, которая выполняет определенную последовательность действий.
* Процедурный стиль программирования выбран т.к. задача разбивается на последовательные действия.
* Организация кода в виде процедур улучшает читаемость и понимаемость программы
*/